{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { NormalButton } from \"../../components/Buttons\";\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFonts, Poppins_400Regular, Poppins_700Bold } from '@expo-google-fonts/poppins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Name(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_700Bold: Poppins_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _route$params = route.params,\n      result = _route$params.result,\n      familyName = _route$params.familyName,\n      givenName = _route$params.givenName;\n\n  var _useState = useState(givenName),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstname = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(familyName),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonActive = _useState6[0],\n      setButtonActive = _useState6[1];\n\n  function checkTextInputs() {\n    if (firstname != '' && lastName != '') {\n      setButtonActive(true);\n    } else {\n      setButtonActive(false);\n    }\n  }\n\n  useEffect(function () {\n    updateFirstNameandCheckTextInputs(givenName);\n    updateLastNameandCheckTextInputs(familyName);\n  }, []);\n\n  function updateFirstNameandCheckTextInputs(name) {\n    givenName = name;\n    setFirstName(name);\n    checkTextInputs();\n  }\n\n  function updateLastNameandCheckTextInputs(name) {\n    familyName = name;\n    setLastName(name);\n    checkTextInputs();\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.mainView,\n      children: [_jsx(Text, {\n        style: _objectSpread(_objectSpread({}, HeadingStyle), {}, {\n          fontFamily: 'Poppins_700Bold',\n          fontWeight: '700',\n          textAlign: 'left',\n          marginVertical: 24\n        }),\n        children: \"What's your name?\"\n      }), _jsx(NormalTextField, {\n        value: firstname,\n        placeholder: \"Add first Name\",\n        onChangeText: function onChangeText(text) {\n          return updateFirstNameandCheckTextInputs(text);\n        },\n        onDelete: function onDelete() {\n          return console.log(\"deleting\");\n        }\n      }), _jsx(NormalTextField, {\n        placeholder: \"Add last Name\",\n        value: lastName,\n        onChangeText: function onChangeText(text) {\n          return updateLastNameandCheckTextInputs(text);\n        }\n      })]\n    }), _jsx(View, {\n      style: _objectSpread(_objectSpread({}, styles.mainView), {}, {\n        justifyContent: 'flex-end',\n        marginVertical: 20\n      }),\n      children: _jsx(NormalButton, {\n        text: \"Next\",\n        onPress: function onPress() {\n          return buttonActive ? navigation.navigate('Interests', {\n            result: result,\n            familyName: familyName,\n            givenName: givenName\n          }) : null;\n        },\n        inActive: buttonActive\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  textInput: {\n    backgroundColor: 'white',\n    height: 44,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ECEEF2',\n    paddingLeft: 16,\n    paddingVertical: 10,\n    fontFamily: 'Poppins_400Regular'\n  },\n  placeholderStyle: {},\n  mainView: {\n    flex: 1,\n    marginHorizontal: 16\n  },\n  textInputView: {\n    marginVertical: 5\n  }\n});\n\nfunction NormalTextField(_ref2) {\n  var placeholder = _ref2.placeholder,\n      onChangeText = _ref2.onChangeText,\n      onDelete = _ref2.onDelete,\n      value = _ref2.value;\n  return _jsx(View, {\n    style: styles.textInputView,\n    children: _jsx(TextInput, {\n      value: value,\n      style: styles.textInput,\n      placeholder: placeholder,\n      onChangeText: onChangeText,\n      paddingStyle: styles.paddingStyle\n    })\n  });\n}","map":{"version":3,"sources":["/Users/ebukaegbunam/Developer/Approachable/App/ApproachableNative/src/screens/Onboarding/Name.js"],"names":["React","useState","useEffect","NormalButton","AppLoading","AsyncStorage","useFonts","Poppins_400Regular","Poppins_700Bold","Name","route","navigation","fontsLoaded","params","result","familyName","givenName","firstname","setFirstName","lastName","setLastName","buttonActive","setButtonActive","checkTextInputs","updateFirstNameandCheckTextInputs","updateLastNameandCheckTextInputs","name","styles","container","mainView","HeadingStyle","fontFamily","fontWeight","textAlign","marginVertical","text","console","log","justifyContent","navigate","StyleSheet","create","flex","backgroundColor","textInput","height","borderRadius","borderWidth","borderColor","paddingLeft","paddingVertical","placeholderStyle","marginHorizontal","textInputView","NormalTextField","placeholder","onChangeText","onDelete","value","paddingStyle"],"mappings":"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","sourcesContent":["import React, {useState , useEffect} from 'react';\nimport {View, Text, StyleSheet, TextInput} from 'react-native';\nimport {NormalButton} from '../../components/Buttons';\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n  useFonts,\n  Poppins_400Regular,\n  Poppins_700Bold,\n} from '@expo-google-fonts/poppins';\n\nexport default function Name({route ,navigation}) {\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular,\n    Poppins_700Bold,\n  });\n  let  { result, familyName , givenName } = route.params\n// tells me how many renders i am having.. fix this later with useMemo\n  const [firstname, setFirstName] = useState(givenName);\n  const [lastName, setLastName] = useState(familyName);\n  const [buttonActive, setButtonActive] = useState(false);\n  function checkTextInputs() {\n    if (firstname != '' && lastName != '') {\n      setButtonActive(true);\n    } else {\n      setButtonActive(false);\n    }\n  }\n  useEffect(() => {\n    updateFirstNameandCheckTextInputs(givenName);\n    updateLastNameandCheckTextInputs(familyName);\n  }, [])\n  function updateFirstNameandCheckTextInputs(name) {\n    givenName = name;\n    setFirstName(name);\n    checkTextInputs();\n  }\n  function updateLastNameandCheckTextInputs(name) {\n    familyName = name;\n    setLastName( name);\n    checkTextInputs();\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.mainView}>\n        <Text\n          style={{\n            ...HeadingStyle,\n            fontFamily: 'Poppins_700Bold',\n            fontWeight: '700',\n            textAlign: 'left',\n            marginVertical: 24,\n          }}>\n          What's your name?\n        </Text>\n        <NormalTextField\n          value = {firstname}\n          placeholder=\"Add first Name\"\n          onChangeText={text => updateFirstNameandCheckTextInputs(text)}\n          onDelete={() => console.log(\"deleting\")}\n        />\n        <NormalTextField\n          placeholder=\"Add last Name\"\n          value = {lastName}\n          onChangeText={text => updateLastNameandCheckTextInputs(text)}\n        \n        />\n      </View>\n\n      <View\n        style={{\n          ...styles.mainView,\n          justifyContent: 'flex-end',\n          marginVertical: 20,\n        }}>\n        <NormalButton\n          text=\"Next\"\n          onPress={() =>  buttonActive ? navigation.navigate('Interests' ,  {result , familyName, givenName}) : null}\n          inActive={buttonActive}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  textInput: {\n    backgroundColor: 'white',\n    height: 44,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#ECEEF2',\n    paddingLeft: 16,\n    paddingVertical: 10,\n    fontFamily: 'Poppins_400Regular',\n  },\n  placeholderStyle: {},\n  mainView: {\n    flex: 1,\n\n    marginHorizontal: 16,\n  },\n  textInputView: {\n    marginVertical: 5,\n  },\n});\n\nfunction NormalTextField({placeholder, onChangeText, onDelete , value}) {\n  return (\n    <View style={styles.textInputView}>\n      <TextInput\n        value = {value}\n        style={styles.textInput}\n        placeholder={placeholder}\n        onChangeText={onChangeText}\n        paddingStyle={styles.paddingStyle}\n        // onKeyPress={({nativeEvent}) => {\n        //   nativeEvent.key === 'Backspace' ?  onDelete : null;\n        // }}\n      />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}