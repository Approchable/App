{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { HeaderText, RegularText, SmallerText } from \"../../components/Texts\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport SucessLogo from \"../../assets/images/assets/SucessLogo.svg\";\nimport { NormalButton } from \"../../components/Buttons\";\nimport { UserContext } from \"../..//context/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Sucess() {\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  console.log(user);\n  var buttonActive = true;\n\n  function removeItemValue(key) {\n    try {\n      AsyncStorage.removeItem(key);\n      setUser(null);\n    } catch (exception) {\n      console.log(exception);\n    }\n  }\n\n  if (user !== undefined && user !== null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: {\n          marginHorizontal: 18,\n          marginTop: 20,\n          flex: 1\n        },\n        children: [_jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(HeaderText, {\n            content: \"Approached!\"\n          }), _jsx(SmallerText, {\n            content: 'Planet Approachable is excited to have you onboard, ' + (user == null ? void 0 : user.givenName) + '. We will let you know once your pod is ready. Stay tuned by enabling notifications.'\n          }), _jsx(View, {\n            style: {\n              marginTop: -20\n            },\n            children: _jsx(SmallerText, {\n              content: \"Already done? Sit tight and we will approach you! \"\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 1.5,\n            alignItems: 'center'\n          },\n          children: _jsx(SucessLogo, {\n            witdth: \"100%\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 0.3,\n            marginBottom: 20\n          },\n          children: _jsx(NormalButton, {\n            text: \"Delete Account\",\n            onPress: function onPress() {\n              return buttonActive ? removeItemValue('user') : null;\n            },\n            inActive: true,\n            hollow: true\n          })\n        })]\n      })\n    });\n  } else {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: {\n          marginHorizontal: 18,\n          marginTop: 20,\n          flex: 1\n        },\n        children: _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(HeaderText, {\n            content: \"Signed Out!\"\n          }), _jsx(SmallerText, {\n            content: 'Restart the app to sign in again. '\n          })]\n        })\n      })\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/ebukaegbunam/Developer/Approachable/App/ApproachableNative/src/screens/Onboarding/Sucess.js"],"names":["React","useContext","HeaderText","RegularText","SmallerText","AsyncStorage","SucessLogo","NormalButton","UserContext","Sucess","user","setUser","console","log","buttonActive","removeItemValue","key","removeItem","exception","undefined","styles","container","marginHorizontal","marginTop","flex","givenName","alignItems","marginBottom","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {View, Text, StyleSheet} from 'react-native';\nimport {HeaderText, RegularText, SmallerText} from '../../components/Texts';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport SucessLogo from '../../assets/images/assets/SucessLogo.svg';\nimport {NormalButton} from '../../components/Buttons';\nimport {UserContext} from '../..//context/UserContext';\n\nexport default function Sucess() {\n  const [user, setUser] = useContext(UserContext);\n  console.log(user);\n  const buttonActive = true;\n\n  function removeItemValue(key) {\n    try {\n      AsyncStorage.removeItem(key);\n      setUser(null);\n    } catch (exception) {\n      console.log(exception);\n    }\n  }\n\n  if (user !== undefined && user !== null) {\n    return (\n      <View style={styles.container}>\n        <View style={{marginHorizontal: 18, marginTop: 20, flex: 1}}>\n          {/* <HeaderText content={user.givenName + \" is now Approached!\"} /> */}\n          <View style={{flex: 1}}>\n            <HeaderText content=\"Approached!\" />\n            <SmallerText\n              content={\n                'Planet Approachable is excited to have you onboard, ' +\n                user?.givenName +\n                '. We will let you know once your pod is ready. Stay tuned by enabling notifications.'\n              }\n            />\n            <View style={{marginTop: -20}}>\n              <SmallerText content=\"Already done? Sit tight and we will approach you! \" />\n            </View>\n          </View>\n          <View\n            style={{\n              //height: 300,\n              flex: 1.5,\n              alignItems: 'center',\n            }}>\n            <SucessLogo witdth=\"100%\" />\n          </View>\n\n          <View style={{flex: 0.3, marginBottom: 20}}>\n            <NormalButton\n              text=\"Delete Account\"\n              onPress={() => (buttonActive ? removeItemValue('user') : null)} //clode app\n              inActive={true}\n              hollow\n            />\n          </View>\n        </View>\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <View style={{marginHorizontal: 18, marginTop: 20, flex: 1}}>\n          {/* <HeaderText content={user.givenName + \" is now Approached!\"} /> */}\n          <View style={{flex: 1}}>\n            <HeaderText content=\"Signed Out!\" />\n            <SmallerText content={'Restart the app to sign in again. '} />\n          </View>\n          {/* <View\n            style={{\n              //height: 300,\n              flex: 1.5,\n              alignItems: 'center',\n            }}>\n            <SucessLogo witdth=\"100%\" />\n          </View> */}\n          {/* \n          <View style={{flex: 0.3, marginBottom: 20}}>\n            <NormalButton\n              text=\"Clear info\"\n              onPress={() => (buttonActive ? removeItemValue('user') : null)} //clode app\n              inActive={true}\n              hollow\n            />\n          </View> */}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}