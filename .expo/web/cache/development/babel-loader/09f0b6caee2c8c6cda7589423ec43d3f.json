{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport OnboardingStack from \"./OnboardingNavigator\";\nimport { useState, useContext } from 'react';\nimport { UserContext, UserProvider } from \"../context/UserContext\";\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport WelcomeStack from \"./WelcomeNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function RootNavigator() {\n  var _useContext = useContext(UserContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      user = _useContext2[0],\n      setUser = _useContext2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      appReady = _useState2[0],\n      setAppReady = _useState2[1];\n\n  var checkUserCredentials = function checkUserCredentials() {\n    return _regeneratorRuntime.async(function checkUserCredentials$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('Checkig for user using async ');\n\n            try {\n              AsyncStorage.getItem('user').then(function (userValue) {\n                console.log('user found', userValue);\n                var userValueJSON = JSON.parse(userValue);\n                setUser(userValueJSON);\n              });\n            } catch (err) {\n              console.error(err);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!appReady) {\n    return _jsx(AppLoading, {\n      startAsync: checkUserCredentials,\n      onFinish: function onFinish() {\n        return setAppReady(true);\n      },\n      onError: console.warn\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    children: user == null || user == undefined ? _jsx(OnboardingStack, {}) : _jsx(WelcomeStack, {})\n  });\n}","map":{"version":3,"sources":["/Users/ebukaegbunam/Developer/Approachable/App/ApproachableNative/src/navigation/RootNavigator.js"],"names":["React","NavigationContainer","OnboardingStack","useState","useContext","UserContext","UserProvider","AppLoading","AsyncStorage","WelcomeStack","RootNavigator","user","setUser","appReady","setAppReady","checkUserCredentials","console","log","getItem","then","userValue","userValueJSON","JSON","parse","err","error","warn","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,eAAP;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,SAAQC,WAAR,EAAqBC,YAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP;;AAKA,eAAe,SAASC,aAAT,GAAyB;AACtC,oBAAwBN,UAAU,CAACC,WAAD,CAAlC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AAEA,kBAAgCT,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAC3BC,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AACA,gBAAI;AACFT,cAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BC,IAA7B,CAAkC,UAAAC,SAAS,EAAI;AAC7CJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,SAA1B;AACA,oBAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAApB;AACAR,gBAAAA,OAAO,CAACS,aAAD,CAAP;AACD,eAJD;AAKD,aAND,CAME,OAAOG,GAAP,EAAY;AACZR,cAAAA,OAAO,CAACS,KAAR,CAAcD,GAAd;AACD;;AAV0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAaA,MAAI,CAACX,QAAL,EAAe;AACb,WACE,KAAC,UAAD;AACE,MAAA,UAAU,EAAEE,oBADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMD,WAAW,CAAC,IAAD,CAAjB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEE,OAAO,CAACU;AAHnB,MADF;AAOD;;AACD,SACE,KAAC,mBAAD;AAAA,cACIf,IAAI,IAAI,IAAR,IAAiBA,IAAI,IAAIgB,SAA1B,GAAsC,KAAC,eAAD,KAAtC,GAA4D,KAAC,YAAD;AAD/D,IADF;AAKD","sourcesContent":["import React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport OnboardingStack from './OnboardingNavigator';\nimport {useState, useContext} from 'react';\nimport {UserContext, UserProvider} from '../context/UserContext';\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport WelcomeStack from './WelcomeNavigator';\n// import { createAppContainer, createSwitchNavigator } from '@react-navigation';\n\n\n\nexport default function RootNavigator() {\n  const [user, setUser] = useContext(UserContext);\n\n  const [appReady, setAppReady] = useState(false);\n\n  const checkUserCredentials = async () => {\n    console.log('Checkig for user using async ');\n    try {\n      AsyncStorage.getItem('user').then(userValue => {\n        console.log('user found', userValue);\n        var userValueJSON = JSON.parse(userValue);\n        setUser(userValueJSON);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!appReady) {\n    return (\n      <AppLoading\n        startAsync={checkUserCredentials}\n        onFinish={() => setAppReady(true)}\n        onError={console.warn}\n      />\n    );\n  }\n  return (\n    <NavigationContainer>\n      {(user == null  || user == undefined)? <OnboardingStack /> : <WelcomeStack />}\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}