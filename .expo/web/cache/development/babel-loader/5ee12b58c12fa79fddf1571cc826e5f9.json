{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useFonts, Poppins_400Regular, Poppins_500Regular, Poppins_700Bold, Poppins_700Normal } from '@expo-google-fonts/poppins';\nimport { SocialIcon } from 'react-native-elements';\nimport { GoogleIcon, AppleIcon } from \"./Utility/Icons\";\nimport { RegularText, SmallerText } from \"./Texts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function NormalButton(_ref) {\n  var text = _ref.text,\n      hollow = _ref.hollow,\n      moreStyles = _ref.moreStyles,\n      onPress = _ref.onPress,\n      inActive = _ref.inActive;\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Regular: Poppins_500Regular,\n    Poppins_700Normal: Poppins_700Normal\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (inActive == false) {\n    return _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.containerInactive), moreStyles),\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: _objectSpread({}, styles.textInactive),\n        children: text\n      })\n    });\n  } else {\n    return _jsx(TouchableOpacity, {\n      style: _objectSpread(_objectSpread({}, styles.container), {}, {\n        backgroundColor: hollow ? '#44BFBA' : 'white',\n        borderColor: hollow ? 'white' : '#44BFBA'\n      }, moreStyles),\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, styles.text), {}, {\n          color: hollow ? 'white' : '#44BFBA',\n          fontFamily: 'Poppins_500Regular'\n        }),\n        children: text\n      })\n    });\n  }\n}\nexport function GoogleButtonWithIcon(_ref2) {\n  var onPress = _ref2.onPress,\n      position = _ref2.position;\n\n  var _useFonts3 = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Regular: Poppins_500Regular,\n    Poppins_700Normal: Poppins_700Normal\n  }),\n      _useFonts4 = _slicedToArray(_useFonts3, 1),\n      fontsLoaded = _useFonts4[0];\n\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.GoogleButton,\n      children: [_jsx(GoogleIcon, {}), _jsx(Text, {\n        style: {\n          marginLeft: 10,\n          color: '#757575',\n          fontFamily: 'Poppins_700Normal',\n          fontWeight: '500',\n          fontSize: 16,\n          lineHeight: 20\n        },\n        children: \"Continue with Google\"\n      })]\n    })\n  });\n}\nexport function AppleButtonWithIcon(_ref3) {\n  var onPress = _ref3.onPress;\n\n  var _useFonts5 = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_500Regular: Poppins_500Regular,\n    Poppins_700Normal: Poppins_700Normal\n  }),\n      _useFonts6 = _slicedToArray(_useFonts5, 1),\n      fontsLoaded = _useFonts6[0];\n\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: _objectSpread(_objectSpread({}, styles.GoogleButton), {}, {\n        backgroundColor: 'black'\n      }),\n      children: [_jsx(AppleIcon, {}), _jsxs(Text, {\n        style: {\n          marginLeft: 10,\n          color: 'white',\n          fontFamily: 'Poppins_700Normal',\n          fontWeight: '500',\n          fontSize: 16,\n          lineHeight: 20\n        },\n        children: [' ', \"Continue with Apple\"]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  GoogleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 5,\n    height: 48,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#ECEEF2'\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#44BFBA',\n    height: 50,\n    borderRadius: 12,\n    width: '100%',\n    borderWidth: 1\n  },\n  text: {\n    color: '#FFFFFF',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n    fontFamily: 'Poppins_500Regular'\n  },\n  containerInactive: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ECEEF2',\n    height: 50,\n    borderRadius: 12,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#ECEEF2'\n  },\n  textInactive: {\n    color: '#FFFFFF',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n    fontFamily: 'Poppins_500Regular'\n  }\n});","map":{"version":3,"sources":["/Users/ebukaegbunam/Developer/Approachable/App/ApproachableNative/src/components/Buttons.js"],"names":["useFonts","Poppins_400Regular","Poppins_500Regular","Poppins_700Bold","Poppins_700Normal","SocialIcon","GoogleIcon","AppleIcon","RegularText","SmallerText","NormalButton","text","hollow","moreStyles","onPress","inActive","fontsLoaded","styles","containerInactive","textInactive","container","backgroundColor","borderColor","color","fontFamily","GoogleButtonWithIcon","position","GoogleButton","marginLeft","fontWeight","fontSize","lineHeight","AppleButtonWithIcon","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","height","borderRadius","borderWidth","width","fontStyle","textAlign"],"mappings":"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","sourcesContent":["import {TouchableOpacity, View, Text, StyleSheet} from 'react-native';\nimport {\n  useFonts,\n  Poppins_400Regular,\n  Poppins_500Regular,\n  Poppins_700Bold,\n  Poppins_700Normal,\n} from '@expo-google-fonts/poppins';\nimport {SocialIcon} from 'react-native-elements';\nimport {GoogleIcon, AppleIcon} from './Utility/Icons';\nimport {RegularText, SmallerText} from './Texts';\n\nexport function NormalButton({text, hollow, moreStyles, onPress, inActive}) {\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular,\n    Poppins_500Regular,\n    Poppins_700Normal,\n  });\n\n  if (inActive == false) {\n    return (\n      <TouchableOpacity\n        style={{\n          ...styles.containerInactive,\n          ...moreStyles,\n        }}\n        onPress={onPress}>\n        <Text\n          style={{\n            ...styles.textInactive,\n            //fontFamily: 'Poppins_500Regular'\n          }}>\n          {text}\n        </Text>\n      </TouchableOpacity>\n    );\n  } else {\n    return (\n      <TouchableOpacity\n        style={{\n          ...styles.container,\n          backgroundColor: hollow ? '#44BFBA' : 'white',\n          borderColor: hollow ? 'white' : '#44BFBA',\n          ...moreStyles,\n        }}\n        onPress={onPress}>\n        <Text\n          style={{\n            ...styles.text,\n            color: hollow ? 'white' : '#44BFBA',\n            fontFamily: 'Poppins_500Regular',\n          }}>\n          {text}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport function GoogleButtonWithIcon({onPress, position}) {\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular,\n    Poppins_500Regular,\n    Poppins_700Normal,\n  });\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.GoogleButton}>\n        <GoogleIcon />\n\n        <Text\n          style={{\n            marginLeft: 10,\n            color: '#757575',\n            fontFamily: 'Poppins_700Normal',\n            fontWeight: '500',\n            fontSize: 16,\n            lineHeight: 20,\n          }}>\n          Continue with Google\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\n\nexport function AppleButtonWithIcon({onPress}) {\n  let [fontsLoaded] = useFonts({\n    Poppins_400Regular,\n    Poppins_500Regular,\n    Poppins_700Normal,\n  });\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={{...styles.GoogleButton, backgroundColor: 'black'}}>\n        <AppleIcon />\n\n        <Text\n          style={{\n            marginLeft: 10,\n            color: 'white',\n            fontFamily: 'Poppins_700Normal',\n            fontWeight: '500',\n            fontSize: 16,\n            lineHeight: 20,\n          }}>\n          {' '}\n          Continue with Apple\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n}\nconst styles = StyleSheet.create({\n  GoogleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 5,\n    height: 48,\n    borderRadius: 12,\n    borderWidth: 1,\n\n    borderColor: '#ECEEF2',\n  },\n\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#44BFBA',\n    height: 50,\n\n    borderRadius: 12,\n    width: '100%',\n    borderWidth: 1,\n  },\n  text: {\n    color: '#FFFFFF',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n    fontFamily: 'Poppins_500Regular',\n  },\n\n  containerInactive: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ECEEF2',\n    height: 50,\n    borderRadius: 12,\n    width: '100%',\n    borderWidth: 1,\n    borderColor: '#ECEEF2',\n  },\n  textInactive: {\n    color: '#FFFFFF',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    fontSize: 16,\n    textAlign: 'center',\n    fontFamily: 'Poppins_500Regular',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}